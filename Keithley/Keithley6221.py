# Driver for Keithley6221
# coding=utf-8
# Commands for dealing with the LakeShore 350

import threading, visa

import logging

# create a logger object for this module
logger = logging.getLogger(__name__)
# added so that log messages show up in Jupyter notebooks
logger.addHandler(logging.StreamHandler())

try:
    # the pyvisa manager we'll use to connect to the GPIB resources
    resource_manager = visa.ResourceManager('C:\\Windows\\System32\\agvisa32.dll')
except OSError:
    logger.exception("\n\tCould not find the VISA library. Is the National Instruments VISA driver installed?\n\n")

class LakeShore350(object):
    def __init__(self, address = 'GPIB0::12::INSTR'):



        self._visa_resource = resource_manager.open_resource(address)
#        self._visa_resource.read_termination = '\r'
        self.CommunicationLock = threading.Lock()
        self.device = self._visa_resource


    def go(self, command):
        """Sends commands as strings to the device and receives strings from the device

        :param command: string generated by a given function, whom will be sent to the device
        :type command: str

        :return: answer from the device
        """
        self.CommunicationLock.acquire()
        received = self.device.query(command)
        self.CommunicationLock.release()
        return received.strip().split(',')


    def ClearInterfaceCommand(self):
        """Clears the bits in the Status Register, Standard Event Status Register, and Operation Event Register,
        and terminates all pending operations. Clears the interface, but not the controller. The related
        controller command is *RST.
        """
        self.go('*CLS')